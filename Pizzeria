import flet as ft
import json
import food_data

class Save:
    def __init__(self):
        self.dataclass = self.load_data()

    def load_data(self):
        try:
            with open('database.json', 'r') as file:
                dataclass = json.load(file)
        except (FileNotFoundError, json.decoder.JSONDecodeError):
            dataclass = {}
        return dataclass

    def save_data(self):
        with open('database.json', 'w') as file:
            json.dump(self.dataclass, file)

food_box = {}
def main(page: ft.Page):
    save = Save()
    sign_status = False

    nick_name = ft.TextField(label="Nickname", autofocus=True)
    password = ft.TextField(label="Password", password=True, can_reveal_password=True)
    greetings = ft.Column()
    nick_info = ft.TextField(label="Your nickname", read_only=True, visible=True, width=500)
    password_info = ft.TextField(label="Your password", read_only=True, password=True, can_reveal_password=True, visible=True, width=500)


    def reg(e):
        save.dataclass[nick_name.value] = password.value
        save.save_data()
        greetings.controls.append(ft.Text(f"You are registered as {nick_name.value}!"))
        nick_name.value = ""
        password.value = ""
        page.update()
        nick_name.focus()

    def sign_in(e):
        if nick_name.value in save.dataclass and save.dataclass[nick_name.value] == password.value:
            profile(e)
            nick_info.value = str(nick_name.value)
            password_info.value = str(password.value)
        else:
            greetings.controls.append(ft.Text("Incorrect nickname or password!"))
            nick_name.value = ""
            password.value = ""
            nick_name.focus()
        page.update()

    def reg_menu(e):
        global sign_status
        sign_status = False
        page.controls.clear()
        page.add(
            nick_name,
            password,
            ft.ElevatedButton("Register?", on_click=reg),
            ft.ElevatedButton("Sign in?", on_click=sign_in),
            greetings,
        )
        nick_name.value = ""
        password.value = ""
        greetings.controls.clear()
        nick_name.focus()
        page.update()

    def sign_out(e):
        reg_menu(e)

    def food_menu(e):
        page.controls.clear()
        page.add(
            ft.ElevatedButton("Pizza", on_click=lambda e: spec_food(pizza_list)),
            ft.ElevatedButton("Sushi", on_click=lambda e: spec_food(sushi_list)),
            ft.ElevatedButton("Drinks", on_click=lambda e: spec_food(drinks_list)),
        )
        page.update()

    def spec_food(food_list):
        page.controls.clear()
        for food in food_list:
            page.add(food)
        page.update()

    food_price = ft.TextField("0", read_only=True)

    def plus_food(food_dict):
        global food_box
        food_box["Название"] = food_dict.get("Название")
        food_box["Цена"] = food_dict.get("Цена")
        food_price.value = str(int(food_price.value) + int(food_dict.get("Цена")))
        print(food_price.value)
        print(food_box)
        page.update()


    def minus_food(food_dict, food_price):
        if int(food_price.value) > 0:
            food_price.value = str(int(food_price.value) - int(food_dict.get("Цена")))


    def food_cart(e):
        page.controls.clear()
        page.add(
            food_price,
            ft.ElevatedButton("Оформить заказ", on_click=lambda e:page.add(ft.Text("Списано" + food_price.value + "руб")))
        )
        page.update()


    def food_description(food_dict):
        page.clean()
        img = ft.Image(src=str(food_dict.get("Фото")), width=500, height=500, fit=ft.ImageFit.CONTAIN)
        page.add(ft.Container(ft.Row([
            img,
            ft.Text("Название"), ft.Text(food_dict.get("Название")),
            ft.Text("Состав"), ft.Text(food_dict.get("Состав")),
            ft.Text("Цена"), ft.Text(food_dict.get("Цена")),
            ft.IconButton(icon=ft.icons.REMOVE, on_click= lambda e: minus_food(food_dict, food_price)), ft.IconButton(icon=ft.icons.ADD, on_click= lambda e: plus_food(food_dict))
        ])))

    pizza_list = [ft.ElevatedButton("Маргарита", on_click=lambda e: food_description(food_data.marg_dict)), ft.ElevatedButton("Горчичная", on_click=lambda e: food_description(food_data.must_dict)), ft.ElevatedButton("Классическая", on_click=lambda e: food_description(food_data.clas_dict))]
    sushi_list = [ft.ElevatedButton("Филадельфия", on_click=lambda e: food_description(food_data.phil_dict)), ft.ElevatedButton("Калифорния", on_click=lambda e: food_description(food_data.cali_dict)), ft.ElevatedButton("Лава", on_click=lambda e: food_description(food_data.lava_dict))]
    drinks_list = [ft.ElevatedButton("Кола", on_click=lambda e: food_description(food_data.cola_dict)), ft.ElevatedButton("Чай", on_click=lambda e: food_description(food_data.tea_dict)), ft.ElevatedButton("Вода", on_click=lambda e: food_description(food_data.water_dict))]

    def profile(e):
        global sign_status
        sign_status = True
        page.controls.clear()
        page.add(
            nick_info,
            password_info,
            ft.ElevatedButton("Sign out?", on_click=sign_out),
            greetings,
        )

        def on_destination_click(e):
            index = page.navigation_bar.selected_index
            if index == 0:
                profile(e)
                page.update()
            elif index == 1:
                page.controls.clear()
                food_menu(e)
                page.update()
            elif index == 2:
                food_cart(e)
                page.update()


            greetings.controls.clear()
            page.update()
        page.navigation_bar = ft.NavigationBar(
            on_change=on_destination_click,
            destinations=[
                ft.NavigationDestination(icon=ft.icons.ACCOUNT_CIRCLE, label="Аккаунт"),
                ft.NavigationDestination(icon=ft.icons.FLATWARE, label="Заказать еду"),
                ft.NavigationDestination(icon=ft.icons.SHOPPING_CART, label="Корзина"),
            ]
        )
        greetings.controls.append(ft.Text(f"You are signed in as {nick_name.value}!"))
        page.update()

    page.add(
        nick_name,
        password,
        ft.ElevatedButton("Register?", on_click=reg),
        ft.ElevatedButton("Sign in?", on_click=sign_in),
        greetings,
    )
ft.app(target=main, view=ft.AppView.WEB_BROWSER)
